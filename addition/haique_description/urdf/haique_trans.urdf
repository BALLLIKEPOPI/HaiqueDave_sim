<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from haique.xacro                   | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="haique">
  <!-- "Dummy" base link to eliminate root link inertia warning -->
  <link name="haique/base_link"/>
  <link name="haique/haique_link">
    <!-- Mass and inertia from the Oceaneering eNovus technical specifications:
         https://www.oceaneering.com/datasheets/ROV-eNovus.pdf -->
    <inertial>
      <origin rpy="0 0 0" xyz="-0.00057507 -0.027168 -0.0053659"/>
      <mass value="2.7603"/>
      <inertia ixx="0.0043247" ixy="-2.278E-08" ixz="5.3815E-08" iyy="0.0056188" iyz="2.3522E-05" izz="0.0023189"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://haique_description/meshes/base_link.STL" scale="1 1 1"/>
      </geometry>
      <material name="">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://haique_description/meshes/base_link.STL" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <!-- Attach haique_link to the dummy base link -->
  <joint name="haique/haique_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <!-- X-fwd, Y-lft, Z-up (ick!) -->
    <parent link="haique/base_link"/>
    <child link="haique/haique_link"/>
  </joint>
  <link name="haique/zuo_link">
    <inertial>
      <origin rpy="0 0 0" xyz="-2.77554457153216E-15 -3.22927749081516E-16 0.222511915631139"/>
      <mass value="0.461552637996899"/>
      <inertia ixx="0.000198480125651565" ixy="5.81805755645298E-20" ixz="5.15641624419298E-18" iyy="0.000205362111118802" iyz="1.97167706843225E-19" izz="6.0777731091829E-05"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://haique_description/meshes/zuo_Link.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://haique_description/meshes/zuo_Link.STL" scale="1 1 1"/>
      </geometry>
    </collision>
  </link>
  <joint name="haique/zuoqingzhuan_joint" type="continuous">
    <origin rpy="-3.1416 -0.15 1.5708" xyz="-0.08 0 0"/>
    <parent link="haique/haique_link"/>
    <child link="haique/zuo_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- zuoqingzhuan_joint Transmission -->
  <transmission name="haique/zuoqingzhuan_tran">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="haique/zuoqingzhuan_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="haique/zuoqingzhuan_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="haique/you_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.461552637996899"/>
      <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://haique_description/meshes/you_Link.STL" scale="1 1 1"/>
        &quot;
            
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://haique_description/meshes/you_Link.STL" scale="1 1 1"/>
        &quot;
            
      </geometry>
    </collision>
  </link>
  <joint name="haique/youqingzhuan_joint" type="continuous">
    <origin rpy="0 0.55 1.573" xyz="0.08 0 0"/>
    <axis xyz="0 1 0"/>
    <parent link="haique/haique_link"/>
    <child link="haique/you_link"/>
  </joint>
  <!-- youqingzhuan_joint Transmission -->
  <transmission name="haique/youqingzhuan_tran">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="haique/youqingzhuan_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="haique/youqingzhuan_motor">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- Default joint state publisher -->
  <gazebo>
    <plugin filename="libuuv_joint_state_publisher.so" name="uuv_joint_state_publisher">
      <robotNamespace>haique</robotNamespace>
      <updateRate>50</updateRate>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/haique</robotNamespace>
      <robotParam>/haique/haique</robotParam>
    </plugin>
  </gazebo>
  <!-- Some pretty colors -->
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="grey2">
    <color rgba="0.9 0.9 0.9 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.5 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.05 0.05 0.05 1.0"/>
  </material>
  <!-- ROTOR DYNAMICS MACROS -->
  <!-- First order dynamics -->
  <!--
    MACROS FOR CONVERSION FUNCTIONS BETWEEN ROTOR'S ANG. VELOCITY AND
    THRUSTER FORCE
  -->
  <!-- THRUSTER MODULE MACROS  -->
  <!--
    Thruster model with first order dynamic model for the rotor dynamics
    and a proportional non-linear steady-state conversion from the rotor's
    angular velocity to output thrust force
  -->
  <link name="haique/thruster_0">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/popi/Haique_Sim/src/uuv_simulator/uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <!-- file://$(find uuv_descriptions)/meshes/qianshang_Link.STL -->
        <!-- <mesh filename="package://uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/> -->
        <cylinder length="0.01" radius="0.13"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="haique/thruster_0_joint" type="continuous">
    <origin rpy="3.1383 0 1.5616" xyz="-0.00013907 0.3405 0.04691"/>
    <axis xyz="0 0 1"/>
    <parent link="haique/haique_link"/>
    <child link="haique/thruster_0"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="haique_0_thruster_model">
      <linkName>haique/thruster_0</linkName>
      <jointName>haique/thruster_0_joint</jointName>
      <thrusterID>0</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="haique/thruster_0">
    <selfCollide>false</selfCollide>
  </gazebo>
  <link name="haique/thruster_1">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/popi/Haique_Sim/src/uuv_simulator/uuv_descriptions/meshes/qianxia_Link.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <!-- file://$(find uuv_descriptions)/meshes/qianshang_Link.STL -->
        <!-- <mesh filename="package://uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/> -->
        <cylinder length="0.01" radius="0.13"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="haique/thruster_1_joint" type="continuous">
    <origin rpy="0 -0.21 0" xyz="0.006 -0.2285 -0.037 "/>
    <axis xyz="0 0 -1"/>
    <parent link="haique/zuo_link"/>
    <child link="haique/thruster_1"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="haique_1_thruster_model">
      <linkName>haique/thruster_1</linkName>
      <jointName>haique/thruster_1_joint</jointName>
      <thrusterID>1</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="haique/thruster_1">
    <selfCollide>false</selfCollide>
  </gazebo>
  <link name="haique/thruster_2">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/popi/Haique_Sim/src/uuv_simulator/uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <!-- file://$(find uuv_descriptions)/meshes/qianshang_Link.STL -->
        <!-- <mesh filename="package://uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/> -->
        <cylinder length="0.01" radius="0.13"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="haique/thruster_2_joint" type="continuous">
    <origin rpy="3.1416 0 1.5735" xyz="0 -0.3005 0.04691"/>
    <axis xyz="0 0 -1"/>
    <parent link="haique/haique_link"/>
    <child link="haique/thruster_2"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="haique_2_thruster_model">
      <linkName>haique/thruster_2</linkName>
      <jointName>haique/thruster_2_joint</jointName>
      <thrusterID>2</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="haique/thruster_2">
    <selfCollide>false</selfCollide>
  </gazebo>
  <link name="haique/thruster_3">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/popi/Haique_Sim/src/uuv_simulator/uuv_descriptions/meshes/qianxia_Link.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <!-- file://$(find uuv_descriptions)/meshes/qianshang_Link.STL -->
        <!-- <mesh filename="package://uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/> -->
        <cylinder length="0.01" radius="0.13"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="haique/thruster_3_joint" type="continuous">
    <origin rpy="0 -0.45 0" xyz="0.02087 -0.2285 -0.03"/>
    <axis xyz="0 0 1"/>
    <parent link="haique/you_link"/>
    <child link="haique/thruster_3"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="haique_3_thruster_model">
      <linkName>haique/thruster_3</linkName>
      <jointName>haique/thruster_3_joint</jointName>
      <thrusterID>3</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="haique/thruster_3">
    <selfCollide>false</selfCollide>
  </gazebo>
  <link name="haique/thruster_4">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/popi/Haique_Sim/src/uuv_simulator/uuv_descriptions/meshes/qianxia_Link.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <!-- file://$(find uuv_descriptions)/meshes/qianshang_Link.STL -->
        <!-- <mesh filename="package://uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/> -->
        <cylinder length="0.01" radius="0.13"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="haique/thruster_4_joint" type="continuous">
    <origin rpy="0.00327 0 -1.3999" xyz="0 0.3405 -0.0369"/>
    <axis xyz="0 0 -1"/>
    <parent link="haique/haique_link"/>
    <child link="haique/thruster_4"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="haique_4_thruster_model">
      <linkName>haique/thruster_4</linkName>
      <jointName>haique/thruster_4_joint</jointName>
      <thrusterID>4</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="haique/thruster_4">
    <selfCollide>false</selfCollide>
  </gazebo>
  <link name="haique/thruster_5">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/popi/Haique_Sim/src/uuv_simulator/uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <!-- file://$(find uuv_descriptions)/meshes/qianshang_Link.STL -->
        <!-- <mesh filename="package://uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/> -->
        <cylinder length="0.01" radius="0.13"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="haique/thruster_5_joint" type="continuous">
    <origin rpy="0 -0.217 0" xyz="-0.005 -0.2285 0.04648 "/>
    <axis xyz="0 0 1"/>
    <parent link="haique/zuo_link"/>
    <child link="haique/thruster_5"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="haique_5_thruster_model">
      <linkName>haique/thruster_5</linkName>
      <jointName>haique/thruster_5_joint</jointName>
      <thrusterID>5</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="haique/thruster_5">
    <selfCollide>false</selfCollide>
  </gazebo>
  <link name="haique/thruster_6">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/popi/Haique_Sim/src/uuv_simulator/uuv_descriptions/meshes/qianxia_Link.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <!-- file://$(find uuv_descriptions)/meshes/qianshang_Link.STL -->
        <!-- <mesh filename="package://uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/> -->
        <cylinder length="0.01" radius="0.13"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="haique/thruster_6_joint" type="continuous">
    <origin rpy="0 0 0.47674" xyz="0 -0.3005 -0.0369"/>
    <axis xyz="0 0 1"/>
    <parent link="haique/haique_link"/>
    <child link="haique/thruster_6"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="haique_6_thruster_model">
      <linkName>haique/thruster_6</linkName>
      <jointName>haique/thruster_6_joint</jointName>
      <thrusterID>6</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="haique/thruster_6">
    <selfCollide>false</selfCollide>
  </gazebo>
  <link name="haique/thruster_7">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/popi/Haique_Sim/src/uuv_simulator/uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <!-- file://$(find uuv_descriptions)/meshes/qianshang_Link.STL -->
        <!-- <mesh filename="package://uuv_descriptions/meshes/qianshang_Link.STL" scale="1 1 1"/> -->
        <cylinder length="0.01" radius="0.13"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="haique/thruster_7_joint" type="continuous">
    <origin rpy="0 -0.45 0" xyz="-0.02387 -0.2285 0.04"/>
    <axis xyz="0 0 -1"/>
    <parent link="haique/you_link"/>
    <child link="haique/thruster_7"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="haique_7_thruster_model">
      <linkName>haique/thruster_7</linkName>
      <jointName>haique/thruster_7_joint</jointName>
      <thrusterID>7</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.05</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.00031</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="haique/thruster_7">
    <selfCollide>false</selfCollide>
  </gazebo>
</robot>

